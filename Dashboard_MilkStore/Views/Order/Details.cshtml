@model Dashboard_MilkStore.Models.Order.OrderViewModel

@{
    ViewData["Title"] = "Chi tiết đơn hàng";
}

@section Styles {
    <link rel="stylesheet" href="~/css/order-detail.css" />
    <style>
        /* Cải thiện thiết kế chung */
        body {
            background-color: #f8f9fa;
        }

        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            margin-bottom: 25px;
            overflow: hidden;
        }

        .card-header {
            background: linear-gradient(135deg, #6366f1 0%, #4f46e5 100%);
            color: white;
            border-bottom: none;
            padding: 10px 20px;
            position: relative;
            display: flex;
            justify-content: space-between;
            align-items: center;
            height: auto;
            min-height: 50px;
        }

        .card-header h3, .card-header h5 {
            margin: 0;
            font-weight: 600;
            font-size: 1.1rem;
        }

        .card-title {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .card-body {
            padding: 20px;
        }

        /* Thiết kế bảng */
        .table {
            margin-bottom: 0;
        }

        .table th, .table td {
            vertical-align: middle;
            padding: 12px 15px;
        }

        .table thead th {
            background: linear-gradient(135deg, #6366f1 0%, #4f46e5 100%);
            color: white;
            border-color: #4338ca;
            font-weight: 500;
            text-transform: uppercase;
            font-size: 0.85rem;
            letter-spacing: 0.5px;
        }

        .table-bordered th, .table-bordered td {
            border-color: #e9ecef;
        }

        /* Thiết kế hình ảnh sản phẩm */
        .product-thumbnail {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .product-thumbnail:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 16px rgba(0,0,0,0.15);
        }

        /* Tùy chỉnh cho modal hình ảnh */
        #imageModal .modal-dialog {
            max-width: 100vw;
            margin: 0;
            height: 100vh;
        }

        #imageModal .modal-content {
            background: transparent;
            border: none;
            box-shadow: none;
            /* height: 100vh; */
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
        }

        #imageModal .modal-body {
            padding: 0;
        }

        #imageModal .image-container {
            position: relative;
            overflow: hidden;
            border-radius: 8px;
            background: rgba(0, 0, 0, 0.2);
            max-width: 100vw;
            max-height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0;
        }

        #imageModal .btn-close {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 0;
            width: 40px;
            height: 40px;
            background: transparent;
            border: none;
            opacity: 0.8;
            transition: all 0.3s ease;
            z-index: 1060;
        }

        #imageModal .btn-close::before,
        #imageModal .btn-close::after {
            content: '';
            position: absolute;
            width: 2px;
            height: 24px;
            background-color: white;
            top: 50%;
            left: 50%;
            transition: all 0.3s ease;
        }

        #imageModal .btn-close::before {
            transform: translate(-50%, -50%) rotate(45deg);
        }

        #imageModal .btn-close::after {
            transform: translate(-50%, -50%) rotate(-45deg);
        }

        #imageModal .btn-close:hover {
            opacity: 1;
            transform: rotate(90deg);
        }

        #imageModal img {
            transition: transform 0.3s ease;
            cursor: zoom-in;
            max-width: 400px;
            width: 100%;
            max-height: 70vh;
            object-fit: contain;
            display: block;
            margin: 0 auto;
        }

        @@media (max-width: 500px) {
            #imageModal img {
                max-width: 90vw;
                max-height: 50vh;
            }
        }

        #imageModal .image-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        #imageModal .image-container:hover .image-overlay {
            opacity: 1;
        }

        #imageModal .loading-spinner {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        #imageModal .image-caption {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(0, 0, 0, 0.7);
            padding: 0.5rem 1.5rem;
            border-radius: 50px;
            backdrop-filter: blur(5px);
            z-index: 1060;
        }

        /* Zoom functionality */
        #imageModal img.zoomed {
            transform: scale(1.5);
            cursor: zoom-out;
        }

        /* Đảm bảo modal hiển thị đúng */
        .modal.show {
            display: block;
            padding-right: 0px !important;
        }

        /* Đảm bảo modal-dialog căn giữa */
        .modal-dialog-centered {
            display: flex;
            align-items: center;
            min-height: calc(100% - 1rem);
            margin: 0 auto !important;
        }

        .no-image {
            width: 100px;
            height: 100px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f8f9fa;
            border-radius: 8px;
            color: #6c757d;
            font-size: 14px;
            text-align: center;
            border: 1px dashed #dee2e6;
        }

        /* Thiết kế badge trạng thái */
        .status-badge {
            padding: 8px 12px;
            border-radius: 50px;
            font-weight: 500;
            font-size: 0.85rem;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }

        .status-badge i {
            font-size: 0.9rem;
        }

        /* Thiết kế giá tiền */
        .price-display {
            font-weight: 600;
            color: #10b981;
        }

        .total-price {
            font-size: 1.2rem;
            font-weight: 700;
            color: #10b981;
        }

        /* Thiết kế nút */
        .btn-back {
            background-color: rgba(255, 255, 255, 0.15);
            color: white;
            border: none;
            border-radius: 50px;
            padding: 6px 12px;
            font-weight: 500;
            transition: all 0.2s;
            font-size: 0.85rem;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }

        .btn-back:hover {
            background-color: rgba(255, 255, 255, 0.25);
            color: white;
        }

        .btn-back i {
            font-size: 0.8rem;
        }

        /* Nút cập nhật trạng thái */
        .update-status-btn {
            background: linear-gradient(135deg, #6366f1 0%, #4f46e5 100%);
            color: white;
            border: none;
            border-radius: 6px;
            padding: 4px 10px;
            font-size: 0.75rem;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(79, 70, 229, 0.3);
            display: inline-flex;
            align-items: center;
            gap: 4px;
            position: relative;
            overflow: hidden;
            z-index: 1;
            min-width: 80px;
            max-width: 120px;
            height: 28px;
        }

        .update-status-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, rgba(255,255,255,0.2), rgba(255,255,255,0));
            transition: all 0.4s ease;
            z-index: -1;
        }

        .update-status-btn:hover {
            background: linear-gradient(135deg, #4f46e5 0%, #3730a3 100%);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 10px rgba(79, 70, 229, 0.4);
        }

        .update-status-btn:hover::before {
            left: 100%;
        }

        .update-status-btn:active {
            transform: translateY(0);
            box-shadow: 0 2px 3px rgba(79, 70, 229, 0.3);
        }

        /* Admin button style */
        .admin-update-btn {
            background: linear-gradient(135deg, #f43f5e 0%, #e11d48 100%);
            box-shadow: 0 3px 6px rgba(225, 29, 72, 0.3);
        }

        .admin-update-btn:hover {
            background: linear-gradient(135deg, #e11d48 0%, #be123c 100%);
            box-shadow: 0 5px 10px rgba(225, 29, 72, 0.4);
        }

        /* Locked button style */
        .locked-btn {
            background: linear-gradient(135deg, #94a3b8 0%, #64748b 100%);
            color: white;
            border: none;
            border-radius: 6px;
            padding: 4px 10px;
            font-size: 0.75rem;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(100, 116, 139, 0.3);
            display: inline-flex;
            align-items: center;
            gap: 4px;
            cursor: not-allowed;
            min-width: 80px;
            max-width: 120px;
            height: 28px;
        }

        /* Modal cập nhật trạng thái */
        .status-modal-header {
            background: linear-gradient(135deg, #6366f1 0%, #4f46e5 100%);
            color: white;
            border-bottom: none;
            padding: 15px 20px;
            position: relative;
            overflow: hidden;
        }

        .status-modal-header::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 150px;
            height: 100%;
            background: linear-gradient(90deg, rgba(255,255,255,0), rgba(255,255,255,0.1));
            clip-path: polygon(100% 0, 0% 0, 100% 100%);
        }

        .admin-modal-header {
            background: linear-gradient(135deg, #f43f5e 0%, #e11d48 100%);
        }

        .order-info {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            border-left: 4px solid #6366f1;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .order-info::after {
            content: '';
            position: absolute;
            bottom: 0;
            right: 0;
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, transparent 50%, rgba(99, 102, 241, 0.1) 50%);
            border-radius: 0 0 8px 0;
        }

        .admin-order-info {
            border-left: 4px solid #e11d48;
        }

        .admin-order-info::after {
            background: linear-gradient(135deg, transparent 50%, rgba(225, 29, 72, 0.1) 50%);
        }

        .order-number {
            font-size: 1rem;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .order-number strong {
            color: #4f46e5;
            font-weight: 600;
        }

        .admin-order-info .order-number strong {
            color: #e11d48;
        }

        .order-date {
            font-size: 0.85rem;
            color: #6c757d;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .status-select {
            border-color: #d1d5db;
            border-radius: 8px;
            padding: 12px 15px;
            transition: all 0.3s;
            font-size: 0.95rem;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%236366f1' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 0.75rem center;
            background-size: 16px 12px;
        }

        .admin-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23e11d48' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
        }

        .status-select:focus {
            border-color: #6366f1;
            box-shadow: 0 0 0 0.25rem rgba(99, 102, 241, 0.25);
        }

        .admin-select:focus {
            border-color: #e11d48;
            box-shadow: 0 0 0 0.25rem rgba(225, 29, 72, 0.25);
        }

        .status-alert {
            background-color: #e0e7ff;
            border-left: 4px solid #6366f1;
            color: #4338ca;
            border-radius: 8px;
            padding: 15px;
            font-size: 0.9rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            position: relative;
            overflow: hidden;
        }

        .status-alert::after {
            content: '';
            position: absolute;
            bottom: 0;
            right: 0;
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, transparent 50%, rgba(99, 102, 241, 0.1) 50%);
            border-radius: 0 0 8px 0;
        }

        .admin-status-alert {
            background-color: #ffe4e6;
            border-left: 4px solid #e11d48;
            color: #be123c;
        }

        .admin-status-alert::after {
            background: linear-gradient(135deg, transparent 50%, rgba(225, 29, 72, 0.1) 50%);
        }

        .alert-info {
            background-color: #e0f2fe;
            border-left: 4px solid #0ea5e9;
            color: #0369a1;
            border-radius: 8px;
            padding: 15px;
            font-size: 0.9rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            position: relative;
            overflow: hidden;
        }

        .alert-info::after {
            content: '';
            position: absolute;
            bottom: 0;
            right: 0;
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, transparent 50%, rgba(14, 165, 233, 0.1) 50%);
            border-radius: 0 0 8px 0;
        }

        .alert-info ul {
            padding-left: 1.5rem;
            margin-bottom: 0;
        }

        .alert-info li {
            margin-bottom: 0.5rem;
            position: relative;
        }

        .alert-info li:last-child {
            margin-bottom: 0;
        }

        .alert-danger {
            background-color: #fee2e2;
            border-left: 4px solid #ef4444;
            color: #b91c1c;
            border-radius: 8px;
            padding: 15px;
            font-size: 0.9rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            position: relative;
            overflow: hidden;
        }

        .alert-danger::after {
            content: '';
            position: absolute;
            bottom: 0;
            right: 0;
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, transparent 50%, rgba(239, 68, 68, 0.1) 50%);
            border-radius: 0 0 8px 0;
        }

        .btn-cancel {
            background-color: #f3f4f6;
            color: #4b5563;
            border: none;
            border-radius: 6px;
            padding: 6px 16px;
            font-size: 0.85rem;
            font-weight: 500;
            transition: all 0.3s;
            display: inline-flex;
            align-items: center;
            gap: 6px;
            position: relative;
            overflow: hidden;
        }

        .btn-cancel::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, rgba(0,0,0,0.05), rgba(0,0,0,0));
            transition: all 0.4s ease;
        }

        .btn-cancel:hover {
            background-color: #e5e7eb;
            color: #1f2937;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .btn-cancel:hover::before {
            left: 100%;
        }

        .btn-cancel:active {
            transform: translateY(0);
        }

        .btn-update {
            background: linear-gradient(135deg, #6366f1 0%, #4f46e5 100%);
            color: white;
            border: none;
            border-radius: 6px;
            padding: 6px 16px;
            font-size: 0.85rem;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(79, 70, 229, 0.3);
            display: inline-flex;
            align-items: center;
            gap: 6px;
            position: relative;
            overflow: hidden;
        }

        .btn-update::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, rgba(255,255,255,0.2), rgba(255,255,255,0));
            transition: all 0.4s ease;
        }

        .btn-update:hover {
            background: linear-gradient(135deg, #4f46e5 0%, #3730a3 100%);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(79, 70, 229, 0.4);
        }

        .btn-update:hover::before {
            left: 100%;
        }

        .btn-update:active {
            transform: translateY(0);
            box-shadow: 0 2px 3px rgba(79, 70, 229, 0.3);
        }

        .btn-update-admin {
            background: linear-gradient(135deg, #f43f5e 0%, #e11d48 100%);
            box-shadow: 0 2px 5px rgba(225, 29, 72, 0.3);
        }

        .btn-update-admin:hover {
            background: linear-gradient(135deg, #e11d48 0%, #be123c 100%);
            box-shadow: 0 4px 8px rgba(225, 29, 72, 0.4);
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .product-thumbnail {
                width: 80px;
                height: 80px;
            }

            .no-image {
                width: 80px;
                height: 80px;
            }

            .update-status-btn {
                padding: 4px 10px;
                font-size: 0.75rem;
            }

            #imageModal .btn-close {
                top: 15px;
                right: 15px;
                width: 30px;
                height: 30px;
            }

            #imageModal .btn-close::before,
            #imageModal .btn-close::after {
                height: 20px;
            }

            #imageModal .image-caption {
                bottom: 15px;
                padding: 0.4rem 1.2rem;
            }
        }

        /* Modal cập nhật trạng thái */
        #updateStatusModal .modal-dialog {
            margin-top: 2.5rem;
            margin-bottom: 2.5rem;
            display: flex;
            align-items: center;
            min-height: calc(100% - 5rem);
        }

        @@media (max-width: 576px) {
            #updateStatusModal .modal-dialog {
                margin-top: 1rem;
                margin-bottom: 1rem;
                min-height: calc(100% - 2rem);
            }
        }
    </style>
}

<div class="container-fluid">
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">
                <i class="bi bi-box-seam"></i>
                Chi tiết đơn hàng #@Model.OrderNumber
            </h3>
            <a href="@Url.Action("Index", new {
                pageNumber = ViewBag.ReturnPageNumber,
                pageSize = ViewBag.ReturnPageSize,
                sortBy = ViewBag.ReturnSortBy,
                sortAscending = ViewBag.ReturnSortAscending,
                statusId = ViewBag.ReturnStatusId,
                searchTerm = ViewBag.ReturnSearchTerm,
                startDate = ViewBag.ReturnStartDate,
                endDate = ViewBag.ReturnEndDate
            })" class="btn btn-back">
                <i class="bi bi-arrow-left"></i> Quay lại
            </a>
        </div>
        <div class="card-body">
            @if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
            {
                <div class="alert alert-danger">
                    @TempData["ErrorMessage"]
                </div>
            }

            @if (!string.IsNullOrEmpty(TempData["SuccessMessage"] as string))
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                </div>
            }

            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title">
                                <i class="bi bi-info-circle"></i>
                                Thông tin đơn hàng
                            </h5>
                        </div>
                        <div class="card-body">
                            <table class="table table-bordered">
                                <tr>
                                    <th style="width: 30%">Mã đơn hàng</th>
                                    <td>@Model.OrderId</td>
                                </tr>
                                <tr>
                                    <th>Số đơn hàng</th>
                                    <td>@Model.OrderNumber</td>
                                </tr>
                                <tr>
                                    <th>Ngày đặt</th>
                                    <td>@(Model.OrderDate?.ToString("yyyy-MM-dd HH:mm") ?? "-")</td>
                                </tr>
                                <tr>
                                    <th>Trạng thái</th>
                                    <td>
                                        @{
                                            string badgeClass = "bg-secondary";
                                            string statusText = Model.StatusName ?? "Chưa xác định";
                                            string statusIcon = "bi-question-circle";

                                            switch (Model.StatusId)
                                            {
                                                case "PENDING":
                                                    badgeClass = "bg-info bg-opacity-10 text-info";
                                                    statusIcon = "bi-hourglass-split";
                                                    break;
                                                case "CONFIRMED":
                                                    badgeClass = "bg-primary bg-opacity-10 text-primary";
                                                    statusIcon = "bi-check-circle";
                                                    break;
                                                case "PROCESSING":
                                                    badgeClass = "bg-warning bg-opacity-10 text-warning";
                                                    statusIcon = "bi-gear";
                                                    break;
                                                case "SHIPPING":
                                                    badgeClass = "bg-info bg-opacity-10 text-info";
                                                    statusIcon = "bi-truck";
                                                    break;
                                                case "COMPLETED":
                                                    badgeClass = "bg-success bg-opacity-10 text-success";
                                                    statusIcon = "bi-check-circle-fill";
                                                    break;
                                                case "CANCELLED":
                                                    badgeClass = "bg-danger bg-opacity-10 text-danger";
                                                    statusIcon = "bi-x-circle-fill";
                                                    break;
                                            }
                                        }
                                        <div class="d-flex align-items-center">
                                            <span class="status-badge @badgeClass me-3">
                                                <i class="bi @statusIcon"></i>
                                                @statusText
                                            </span>
                                            @if (ViewBag.IsAdmin)
                                            {
                                                <!-- Admin có thể cập nhật bất kỳ trạng thái nào -->
                                                <button type="button" class="btn update-status-btn admin-update-btn" data-bs-toggle="modal" data-bs-target="#updateStatusModal">
                                                    <i class="bi bi-shield-fill-check"></i> CẬP NHẬT
                                                </button>
                                            }
                                            else
                                            {
                                                <!-- Staff chỉ có thể cập nhật theo quy trình -->
                                                @if (Model.StatusId == "COMPLETED" || Model.StatusId == "CANCELLED")
                                                {
                                                    <button type="button" class="btn locked-btn" disabled title="Không thể cập nhật trạng thái đơn hàng đã hoàn thành hoặc đã hủy">
                                                        <i class="bi bi-lock-fill"></i> ĐÃ KHÓA
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button type="button" class="btn update-status-btn" data-bs-toggle="modal" data-bs-target="#updateStatusModal">
                                                        <i class="bi bi-pencil-square"></i> CẬP NHẬT
                                                    </button>
                                                }
                                            }
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <th>Trạng thái thanh toán</th>
                                    <td>
                                        @{
                                            string paymentBadgeClass = Model.IsSuccess == true
                                                ? "bg-success bg-opacity-10 text-success"
                                                : "bg-secondary bg-opacity-10 text-secondary";

                                            string paymentStatusText = Model.IsSuccess == true
                                                ? "Đã thanh toán"
                                                : "Chưa thanh toán";

                                            string paymentStatusIcon = Model.IsSuccess == true
                                                ? "bi-check-circle-fill"
                                                : "bi-clock-history";
                                        }
                                        <span class="status-badge @paymentBadgeClass">
                                            <i class="bi @paymentStatusIcon"></i>
                                            @paymentStatusText
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <th>Mã khách hàng</th>
                                    <td>@(Model.CustomerId ?? "-")</td>
                                </tr>
                                <tr>
                                    <th>Tổng tiền</th>
                                    <td><span class="price-display">@(Model.TotalPrice?.ToString("N0") ?? "-") đ</span></td>
                                </tr>
                                <tr>
                                    <th>Phương thức thanh toán</th>
                                    <td>@(Model.PaymentMethodName ?? Model.PaymentMethod ?? "-")</td>
                                </tr>
                                <tr>
                                    <th>Ngày tạo</th>
                                    <td>@(Model.CreatedAt?.ToString("yyyy-MM-dd HH:mm") ?? "-")</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title">
                                <i class="bi bi-truck"></i>
                                Thông tin giao hàng
                            </h5>
                        </div>
                        <div class="card-body">
                            <table class="table table-bordered">
                                <tr>
                                    <th style="width: 30%">Địa chỉ giao hàng</th>
                                    <td>@(Model.ShippingAddress ?? "-")</td>
                                </tr>
                                <tr>
                                    <th>Phí giao hàng</th>
                                    <td><span class="price-display">@(Model.ShippingFee?.ToString("N0") ?? "-") đ</span></td>
                                </tr>
                                <tr>
                                    <th>Mã vận đơn</th>
                                    <td>@(Model.ShippingCode ?? "-")</td>
                                </tr>
                                <tr>
                                    <th>Ghi chú</th>
                                    <td>@(Model.Notes ?? "-")</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="card-title">
                        <i class="bi bi-list-check"></i>
                        Chi tiết đơn hàng
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead class="thead-light">
                                <tr>
                                    <th>Mã sản phẩm</th>
                                    <th>Hình ảnh</th>
                                    <th>Tên sản phẩm</th>
                                    <th>Đơn giá</th>
                                    <th>Số lượng</th>
                                    <th>Thành tiền</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.OrderDetails != null && Model.OrderDetails.Any())
                                {
                                    foreach (var item in Model.OrderDetails)
                                    {
                                        <tr>
                                            <td>@item.ProductId</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(item.Img))
                                                {
                                                    <img src="@item.Img" alt="@item.ProductName" class="product-thumbnail" onclick="openImageModal('@item.Img', '@item.ProductName')" />
                                                }
                                                else
                                                {
                                                    <div class="no-image">
                                                        <i class="bi bi-image me-1"></i>
                                                        Không có ảnh
                                                    </div>
                                                }
                                            </td>
                                            <td>@(item.ProductName ?? "-")</td>
                                            <td><span class="price-display">@(item.ProductPrice?.ToString("N0") ?? "-") đ</span></td>
                                            <td><span class="badge bg-secondary rounded-pill">@item.Quantity</span></td>
                                            <td><span class="price-display">@(item.SubTotal?.ToString("N0") ?? "-") đ</span></td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center">Không có sản phẩm nào</td>
                                    </tr>
                                }
                            </tbody>
                            @if (Model.OrderDetails != null && Model.OrderDetails.Any())
                            {
                                <tfoot>
                                    <tr>
                                        <th colspan="5" class="text-right">Tổng tiền sản phẩm:</th>
                                        <td><span class="price-display">@(Model.OrderDetails.Sum(x => x.SubTotal)?.ToString("N0") ?? "-") đ</span></td>
                                    </tr>
                                    @if (Model.AppliedVouchers != null && Model.AppliedVouchers.Any())
                                    {
                                        <tr>
                                            <th colspan="5" class="text-right">Mã giảm giá đã áp dụng:</th>
                                            <td>
                                                @foreach (var voucher in Model.AppliedVouchers)
                                                {
                                                    <div class="voucher-item mb-1">
                                                        <span class="badge bg-info rounded-pill">
                                                            @voucher.VoucherCode
                                                            @if (voucher.DiscountType == "Percentage")
                                                            {
                                                                <span>(@voucher.DiscountValue%)</span>
                                                            }
                                                            else
                                                            {
                                                                <span>(@voucher.DiscountValue?.ToString("N0") đ)</span>
                                                            }
                                                        </span>
                                                    </div>
                                                }
                                            </td>
                                        </tr>
                                    }
                                    <tr>
                                        <th colspan="5" class="text-right">Phí giao hàng:</th>
                                        <td><span class="price-display">@(Model.ShippingFee?.ToString("N0") ?? "-") đ</span></td>
                                    </tr>
                                    <tr>
                                        <th colspan="5" class="text-right">Tổng cộng:</th>
                                        <td><span class="total-price">@(Model.TotalPrice?.ToString("N0") ?? "-") đ</span></td>
                                    </tr>
                                </tfoot>
                            }
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal cho hình ảnh phóng to (sử dụng Bootstrap Modal) -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            <div class="modal-body p-0">
                <div class="image-container">
                    <img id="modalImage" class="img-fluid" alt="">
                    <div class="image-overlay d-flex align-items-center justify-content-center">
                        <div class="loading-spinner">
                            <div class="spinner-border text-light" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="image-caption">
                    <h5 id="modalImageTitle" class="mb-0 text-white"></h5>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal cập nhật trạng thái đơn hàng -->
<div class="modal fade" id="updateStatusModal" tabindex="-1" aria-labelledby="updateStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header status-modal-header @(ViewBag.IsAdmin ? "admin-modal-header" : "")">
                <h5 class="modal-title" id="updateStatusModalLabel">
                    @if (ViewBag.IsAdmin)
                    {
                        <i class="bi bi-shield-fill-check me-2"></i>
                        <span>Cập nhật trạng thái đơn hàng (Admin)</span>
                    }
                    else
                    {
                        <i class="bi bi-arrow-repeat me-2"></i>
                        <span>Cập nhật trạng thái đơn hàng</span>
                    }
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="UpdateStatus" asp-controller="Order" method="post">
                <div class="modal-body">
                    <input type="hidden" name="orderId" value="@Model.OrderId" />
                    <input type="hidden" name="pageNumber" value="@ViewBag.ReturnPageNumber" />
                    <input type="hidden" name="pageSize" value="@ViewBag.ReturnPageSize" />
                    <input type="hidden" name="sortBy" value="@ViewBag.ReturnSortBy" />
                    <input type="hidden" name="sortAscending" value="@ViewBag.ReturnSortAscending" />
                    <input type="hidden" name="statusId_filter" value="@ViewBag.ReturnStatusId" />
                    <input type="hidden" name="searchTerm" value="@ViewBag.ReturnSearchTerm" />
                    <input type="hidden" name="startDate" value="@ViewBag.ReturnStartDate" />
                    <input type="hidden" name="endDate" value="@ViewBag.ReturnEndDate" />

                    <div class="order-info mb-4 @(ViewBag.IsAdmin ? "admin-order-info" : "")">
                        <div class="order-number">Đơn hàng: <strong>#@Model.OrderNumber</strong></div>
                        <div class="order-date">
                            <i class="bi bi-calendar3"></i>
                            <span>Ngày đặt: @(Model.OrderDate?.ToString("yyyy-MM-dd HH:mm") ?? "-")</span>
                        </div>
                    </div>

                    <div class="mb-4">
                        <label for="statusId" class="form-label fw-medium">Chọn trạng thái mới</label>
                        <select class="form-select status-select @(ViewBag.IsAdmin ? "admin-select" : "")" id="statusId" name="statusId" required>
                            <option value="">-- Chọn trạng thái --</option>
                            @if (ViewBag.OrderStatuses != null)
                            {
                                {
                                    // Xác định các trạng thái hợp lệ dựa trên trạng thái hiện tại
                                    var validNextStatuses = new List<string>();

                                    switch (Model.StatusId)
                                    {
                                        case "PENDING":
                                            validNextStatuses.Add("CONFIRMED");
                                            validNextStatuses.Add("CANCELLED");
                                            break;
                                        case "CONFIRMED":
                                            validNextStatuses.Add("PROCESSING");
                                            validNextStatuses.Add("CANCELLED");
                                            break;
                                        case "PROCESSING":
                                            validNextStatuses.Add("SHIPPING");
                                            break;
                                        case "SHIPPING":
                                            validNextStatuses.Add("COMPLETED");
                                            break;
                                        case "COMPLETED":
                                        case "CANCELLED":
                                            // Không có trạng thái hợp lệ tiếp theo
                                            break;
                                    }

                                    // Admin cũng tuân theo quy trình cập nhật trạng thái giống như staff
                                    // Không cần thêm logic riêng cho admin vì cả admin và staff đều sử dụng cùng một quy trình

                                    foreach (var status in ViewBag.OrderStatuses)
                                    {
                                        bool isCurrentStatus = status.StatusId == Model.StatusId;
                                        bool isValidNextStatus = validNextStatuses.Contains(status.StatusId);
                                        bool shouldDisable = !isValidNextStatus && !isCurrentStatus;

                                        if (isCurrentStatus)
                                        {
                                            <option value="@status.StatusId" selected>@status.Name (Hiện tại)</option>
                                        }
                                        else if (isValidNextStatus)
                                        {
                                            <option value="@status.StatusId">@status.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@status.StatusId" disabled style="color: #aaa;">@status.Name (Không hợp lệ)</option>
                                        }
                                    }
                                }
                            }
                        </select>
                    </div>

                    <div class="alert status-alert @(ViewBag.IsAdmin ? "admin-status-alert" : "")">
                        <i class="bi bi-info-circle-fill me-2"></i>
                        <strong>Lưu ý:</strong> Việc thay đổi trạng thái đơn hàng sẽ được ghi nhận và không thể hoàn tác.
                    </div>

                    @if (Model.StatusId == "COMPLETED" || Model.StatusId == "CANCELLED")
                    {
                        <div class="alert alert-danger">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            Không thể cập nhật trạng thái đơn hàng đã hoàn thành hoặc đã hủy.
                        </div>
                    }

                    <div class="alert @(ViewBag.IsAdmin ? "admin-status-alert" : "alert-info")">
                        <i class="bi bi-info-circle-fill me-2"></i>
                        <strong>Quy trình cập nhật trạng thái:</strong>
                        <ul class="mb-0 mt-1">
                            <li>Đơn hàng <strong>chờ xác nhận</strong> chỉ có thể chuyển sang <strong>đã xác nhận</strong> hoặc <strong>đã hủy</strong></li>
                            <li>Đơn hàng <strong>đã xác nhận</strong> chỉ có thể chuyển sang <strong>đang xử lý</strong> hoặc <strong>đã hủy</strong></li>
                            <li>Đơn hàng <strong>đang xử lý</strong> chỉ có thể chuyển sang <strong>đang giao</strong></li>
                            <li>Đơn hàng <strong>đang giao</strong> chỉ có thể chuyển sang <strong>đã hoàn thành</strong></li>
                            <li>Đơn hàng <strong>đã hoàn thành</strong> hoặc <strong>đã hủy</strong> không thể thay đổi trạng thái</li>
                        </ul>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-cancel" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> HỦY
                    </button>
                    @if (ViewBag.IsAdmin)
                    {
                        <button type="submit" class="btn btn-update btn-update-admin">
                            <i class="bi bi-shield-fill-check"></i> CẬP NHẬT
                        </button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-update" @(Model.StatusId == "COMPLETED" || Model.StatusId == "CANCELLED" ? "disabled" : "")>
                            <i class="bi bi-check-circle"></i> XÁC NHẬN
                        </button>
                    }
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Mở modal hình ảnh sử dụng Bootstrap Modal
        function openImageModal(imgSrc, imgAlt) {
            const modalImage = document.getElementById("modalImage");
            const modalImageTitle = document.getElementById("modalImageTitle");
            const imageContainer = document.querySelector('.image-container');
            
            // Hiển thị loading spinner
            imageContainer.querySelector('.image-overlay').style.opacity = '1';
            
            // Đặt thuộc tính src và alt
            modalImage.src = imgSrc;
            modalImage.alt = imgAlt || '';
            modalImageTitle.textContent = imgAlt || '';
            
            // Xử lý khi hình ảnh đã tải xong
            modalImage.onload = function() {
                imageContainer.querySelector('.image-overlay').style.opacity = '0';
            };

            // Sử dụng Bootstrap Modal API để hiển thị modal
            var imageModal = new bootstrap.Modal(document.getElementById('imageModal'));
            imageModal.show();
        }

        // Xử lý zoom hình ảnh
        document.addEventListener('DOMContentLoaded', function() {
            const modalImage = document.getElementById("modalImage");
            
            modalImage.addEventListener('click', function() {
                this.classList.toggle('zoomed');
            });

            // Xóa src và reset zoom khi modal đóng
            document.getElementById('imageModal').addEventListener('hidden.bs.modal', function () {
                modalImage.src = "";
                modalImage.classList.remove('zoomed');
                document.getElementById("modalImageTitle").textContent = "";
            });
        });
    </script>
}